plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.koreait'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	// MySQL
	runtimeOnly 'com.mysql:mysql-connector-j'
	// PostgreSQL
	runtimeOnly 'org.postgresql:postgresql'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	// H2
	runtimeOnly 'com.h2database:h2'

	implementation 'org.springframework.boot:spring-boot-starter-actuator' // 새 컨테이너를 언제 가져올건지
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	// 구형 컨테이너에서 신형 컨테이너로 바뀌면 세션 정보가 이관될 수 있도록
	implementation 'org.springframework.boot:spring-session-data-redis'
}

tasks.named('test') {
	useJUnitPlatform()
}
